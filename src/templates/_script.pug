script.
  document.documentElement.classList.remove("-no-js");
  document.addEventListener("DOMContentLoaded", () => {
    const $Search = document.querySelector("#Search");
    if ($Search) {
      const refs = Array.from(document.querySelectorAll("article[id^=reference]"));
      const models = refs.map((ref) => ({
        id: ref.id,
        title: ref.querySelector(".-reference").innerText.toLowerCase(),
        link: ref.querySelector(".-reference").href.toLowerCase(),
        content: ref.children[2] ? ref.children[1].innerText.toLowerCase() : null,
      }));

      const getMatchedIds = (query) => models.filter(({ title, link, content }) => RegExp(query).test(title) || RegExp(query).test(link) || RegExp(query).test(content)).map(({ id }) => id);

      const toggle = (query) => {
        refs.forEach((ref) => ref.setAttribute("hidden", ""));
        const ids = getMatchedIds(query);
        refs.forEach((ref) => {
          if (ids.includes(ref.id)) {
            ref.removeAttribute("hidden");
          }
        });
      }

      const handleInputSearch = (query) => {
        if (query === "") {
          refs.forEach((ref) => ref.removeAttribute("hidden"));
        } else {
          refs.forEach((ref) => ref.setAttribute("hidden", ""));
          const ids = getMatchedIds(query);
          refs.forEach((ref) => {
            if (ids.includes(ref.id)) {
              ref.removeAttribute("hidden");
            }
          });
        }
      };

      $Search.addEventListener("input", ({ target }) => handleInputSearch(target.value.toLowerCase()), false);
    }
  });
